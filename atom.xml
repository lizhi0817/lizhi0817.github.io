<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>FreakBunny</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lizhi0817.github.io/"/>
  <updated>2019-07-19T07:17:51.649Z</updated>
  <id>https://lizhi0817.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>APP启动优化</title>
    <link href="https://lizhi0817.github.io/2019/07/18/android-qi-dong-you-hua/"/>
    <id>https://lizhi0817.github.io/2019/07/18/android-qi-dong-you-hua/</id>
    <published>2019-07-18T01:25:00.000Z</published>
    <updated>2019-07-19T07:17:51.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、App启动分类"><a href="#一、App启动分类" class="headerlink" title="一、App启动分类"></a>一、App启动分类</h2><h3 id="1-冷启动-COLD-START"><a href="#1-冷启动-COLD-START" class="headerlink" title="1.冷启动 COLD START"></a>1.冷启动 COLD START</h3><p>当启动应用时，后台没有该应用的进程（常见如：进程被杀、首次启动等），这时系统会重新创建一个新的进程分配给该应用那么这种方式下，应用启动的时间最长的。</p><h3 id="2-热启动-WARM-START"><a href="#2-热启动-WARM-START" class="headerlink" title="2.热启动 WARM START"></a>2.热启动 WARM START</h3><p>相比温启动，热启动时应用做的工作更少，启动时间更短。热启动产生的场景很多，常见如：用户使用返回键退出应用，然后马上又重新启动应用</p><h3 id="3-温启动-LUKEWARM-START"><a href="#3-温启动-LUKEWARM-START" class="headerlink" title="3.温启动 LUKEWARM START"></a>3.温启动 LUKEWARM START</h3><p>App进程存在，当时Activity可能因为内存不足被回收。这时候启动App不需要重新创建进程，但是Activity的onCrate()方法得重新执行的。<br>举个例子：<br>打开游戏一直在玩，微信弹出一个聊天消息，切换到微信，聊了一会儿天后，过了一段时间之后再次回到游戏。这时候游戏的进程虽然存在，但是Activity很有可能已经被回收了，这时候外面就只需要重新加载Activity就可以了。</p><hr><p><strong>热启动</strong>和<strong>温启动</strong>因为会从已有的进程中来启动，不会再创建和初始化Application。</p><p>平时我们讨论中基本都会将<strong>温启动</strong>和<strong>热启动</strong>合在一起统称为<strong>热启动</strong>，因为<strong>温启动</strong>与<strong>热启动</strong>差异很小，如果不是特别留意启动流程，那么在用户体验和感官上没有直接差异，但是在<code>Framework</code>层执行时是有一定差异的。本次优化点也是围绕冷启动和热启动来做，将温启动与热启动统称为热启动。</p><p>另外有一点，从绝对时间上来看，app安装后的<strong>首次启动</strong>将会最耗时，因为首次启动会新建数据库，<code>sp</code>文件，各种缓存，配置等。</p><h2 id="二、系统的启动"><a href="#二、系统的启动" class="headerlink" title="二、系统的启动"></a>二、系统的启动</h2><p>先给大家贴个图吧，大概了解一下。(有点儿丑，大概看一下就行)<br><img src="https://i.loli.net/2019/07/18/5d308139e40b597502.png" alt="系统启动.png"></p><h3 id="1-系统初始化"><a href="#1-系统初始化" class="headerlink" title="1.系统初始化"></a>1.系统初始化</h3><p><code>源码为C++</code></p><ul><li><strong>BootLoader</strong>：负责拉起操作系统</li><li><strong>Linux Kernel</strong>：做系统的各种设置，目录加载，网络配置….这里面有个比较重要的点就是，它通过init.rc这个文件，初始化后会启动名为<strong>init</strong>的一个进程，其中它的ID号为1。</li><li><strong>init</strong>：开启一个孵化器(Zygote)&lt;别Google翻译,如果你不知道的话&gt;。</li><li><strong>Zygote</strong>：它会孵化出和自己一样的对象，靠着它可以孵化出和它一样的进程，非常强大。它还可以创建JVM虚拟机，还有注册JNI的方法等等…</li></ul><p>　　在创建完虚拟机后，它还会打开<code>SystemServer</code>，并在这里面会完成打开<code>Binder线程池</code>，同时会打开<code>SystemServiceManager</code>，前者主要是用于远端进程之间的通讯，通过<code>SystemServer</code>和<code>SystemServiceManager</code>的合作，会启动我们在程序中用到的各种服务，比如：<code>ActivityManagerService(程序中所有的Activity)</code>、<code>WindowManagerService(窗口有关)</code>、<code>PackageManagerService(安装包)</code>、<code>CameraService(相机)</code>、<code>SensorService(传感器)</code>…..这种服务有很多，各位看官感兴趣的话可以Google一下。<br>　　其中，<code>ActivityManagerService</code>会启动一个叫做<code>Lanucher</code>的东西。接下来，我们就聊一下它的启动过程。</p><h3 id="2-Lanucher"><a href="#2-Lanucher" class="headerlink" title="2.Lanucher"></a>2.Lanucher</h3><blockquote><p>adb shell dumpsys activity activities</p></blockquote><p>通过上面这一行代码，我们可以查看当前运行的所有Activity的名字。<br><img src="https://i.loli.net/2019/07/18/5d30813a0522635526.png" alt="运行的activity.png"><br>各位看官可以看一下，这是其中一段正在运行名为<code>InCallActivity</code>的Activity。我们可以把正在运行的手机桌面当做一个Activity，为什么这么说呢，因为桌面上的这些图标也是按钮，我们开发的APP的UI上也是按钮，所以我们可以把桌面上的APP当做按钮来理解。<br>我们可以看一下源码</p><pre class=" language-java"><code class="language-java">  <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> v     <span class="token operator">*</span>            The view representing the clicked shortcut<span class="token punctuation">.</span>     <span class="token operator">*</span>            表示单击的快捷方式的视图。     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Make sure that rogue clicks don't get through while allapps is</span>        <span class="token comment" spellcheck="true">// launching, or after the</span>        <span class="token comment" spellcheck="true">// view has detached (it's possible for this to happen if the view is</span>        <span class="token comment" spellcheck="true">// removed mid touch).</span>        <span class="token comment" spellcheck="true">// 确保所有APP启动时，或者视图分离后，恶意点击不会通过</span>        <span class="token comment" spellcheck="true">// (如果在触摸过程中移除视图，则可能发生这种情况)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getWindowToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mWorkspace<span class="token punctuation">.</span><span class="token function">isFinishedSwitchingState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Object tag <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">getTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token keyword">instanceof</span> <span class="token class-name">ShortcutInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 打开快捷方式对应的intent</span>            <span class="token keyword">final</span> Intent intent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ShortcutInfo<span class="token punctuation">)</span> tag<span class="token punctuation">)</span><span class="token punctuation">.</span>intent<span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            v<span class="token punctuation">.</span><span class="token function">getLocationOnScreen</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>            intent<span class="token punctuation">.</span><span class="token function">setSourceBounds</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                    <span class="token operator">+</span> v<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> v<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token function">startActivitySafely</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> intent<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>success <span class="token operator">&amp;&amp;</span> v <span class="token keyword">instanceof</span> <span class="token class-name">BubbleTextView</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                mWaitingForResume <span class="token operator">=</span> <span class="token punctuation">(</span>BubbleTextView<span class="token punctuation">)</span> v<span class="token punctuation">;</span>                mWaitingForResume<span class="token punctuation">.</span><span class="token function">setStayPressed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token keyword">instanceof</span> <span class="token class-name">FolderInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">FolderIcon</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 打开文件夹</span>                FolderIcon fi <span class="token operator">=</span> <span class="token punctuation">(</span>FolderIcon<span class="token punctuation">)</span> v<span class="token punctuation">;</span>                <span class="token function">handleFolderClick</span><span class="token punctuation">(</span>fi<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> mAllAppsButton<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 显示或者不显示“全部程序”界面</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAllAppsVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">showWorkspace</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token function">onClickAllAppsButton</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">startActivitySafely</span><span class="token punctuation">(</span>View v<span class="token punctuation">,</span> Intent intent<span class="token punctuation">,</span> Object tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            success <span class="token operator">=</span> <span class="token function">startActivity</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> intent<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ActivityNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>activity_not_found<span class="token punctuation">,</span>                    Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Unable to launch. tag="</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">" intent="</span> <span class="token operator">+</span> intent<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> success<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java">    <span class="token keyword">boolean</span> <span class="token function">startActivity</span><span class="token punctuation">(</span>View v<span class="token punctuation">,</span> Intent intent<span class="token punctuation">,</span> Object tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>        intent<span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>FLAG_ACTIVITY_NEW_TASK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// Only launch using the new animation if the shortcut has not opted</span>            <span class="token comment" spellcheck="true">// out (this is a</span>            <span class="token comment" spellcheck="true">// private contract between launcher and may be ignored in the</span>            <span class="token comment" spellcheck="true">// future).</span>            <span class="token comment" spellcheck="true">// 只有在快捷方式没有选择退出时才使用新动画启动</span>            <span class="token comment" spellcheck="true">// (这是启动程序之间私有的，以后可能会被忽略)</span>            <span class="token keyword">boolean</span> useLaunchAnimation <span class="token operator">=</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> null<span class="token punctuation">)</span>                    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>intent<span class="token punctuation">.</span><span class="token function">hasExtra</span><span class="token punctuation">(</span>INTENT_EXTRA_IGNORE_LAUNCH_ANIMATION<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>useLaunchAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ActivityOptions opts <span class="token operator">=</span> ActivityOptions<span class="token punctuation">.</span><span class="token function">makeScaleUpAnimation</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>                        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> opts<span class="token punctuation">.</span><span class="token function">toBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>activity_not_found<span class="token punctuation">,</span>                    Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>                    <span class="token string">"Launcher does not have the permission to launch "</span>                            <span class="token operator">+</span> intent                            <span class="token operator">+</span> <span class="token string">". Make sure to create a MAIN intent-filter for the corresponding activity "</span>                            <span class="token operator">+</span> <span class="token string">"or use the exported attribute for this activity. "</span>                            <span class="token operator">+</span> <span class="token string">"tag="</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">" intent="</span> <span class="token operator">+</span> intent<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>当我们点击<code>onClick</code>这个方法的时候，就会把应用信息传到intent中，就是<code>((ShortcutInfo) tag).intent</code>这个<code>tag</code>。他就会把信息封装成一个intent，<code>startActivitySafely</code>这里就是启动是否成功，当我们再往里面点进去看的时候，就是进入第二个代码块中，然后再点击第二个代码块中的<code>startActivity</code>，我们就会进去到第三个代码块中。这个代码块和我们传统的开启Activity是不一样的，我们画个图继续分析下去。<br><img src="https://i.loli.net/2019/07/18/5d308139e42f846976.png" alt="具体做的事情.png"><br>这里红线表示的是它是通过<code>AMS(ActivityManagerService)</code>管理的。后面我们聊架构的时候，也会说这个东西，暂时先不说，因为这个比较复杂。各位看官也可以自己看一下源码，点击后，会进入Activity的<code>startActivity(Intent intent)</code>这个方法，所以我们这里是看不到<code>AMS</code>是如何处理的。这里<code>AMS</code>会开辟内存空间，内存开辟后，这里会通知<code>AMS</code>，这时<code>AMS</code>会有一个孵化器，通过<code>fork</code>的方式，开启一个叫做<code>SystemService</code>，它会开启ActivityThread，这里面是由一个<code>main</code>方法的。我们接下来看一下这个main方法。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span> <span class="token string">"ActivityThreadMain"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// CloseGuard defaults to true and can be quite spammy.  We</span>        <span class="token comment" spellcheck="true">// disable it here, but selectively enable it later (via</span>        <span class="token comment" spellcheck="true">// StrictMode) on debug builds, but using DropBox, not logs.</span>        <span class="token comment" spellcheck="true">// closeguard默认为true，可能非常垃圾。这里禁用它，但以后</span>        <span class="token comment" spellcheck="true">//（通过strictmode）在调试版本上选择性地启用它，但使用Dropbox，而不是日志。</span>        CloseGuard<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Environment<span class="token punctuation">.</span><span class="token function">initForCurrentUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Set the reporter for event logging in libcore</span>        <span class="token comment" spellcheck="true">// 在libcore中设置事件日志记录器</span>        EventLogger<span class="token punctuation">.</span><span class="token function">setReporter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventLoggingReporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Make sure TrustedCertificateStore looks in the right place for CA certificates</span>        <span class="token comment" spellcheck="true">// 确保TrustedCertificateStore查找CA证书的位置正确</span>        <span class="token keyword">final</span> File configDir <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getUserConfigDirectory</span><span class="token punctuation">(</span>UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TrustedCertificateStore<span class="token punctuation">.</span><span class="token function">setDefaultUserDirectory</span><span class="token punctuation">(</span>configDir<span class="token punctuation">)</span><span class="token punctuation">;</span>        Process<span class="token punctuation">.</span><span class="token function">setArgV0</span><span class="token punctuation">(</span><span class="token string">"&lt;pre-initialized>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Looper<span class="token punctuation">.</span><span class="token function">prepareMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Find the value for {@link #PROC_START_SEQ_IDENT} </span>        <span class="token comment" spellcheck="true">// if provided on the command line.</span>        <span class="token comment" spellcheck="true">// It will be in the format "seq=114"</span>        <span class="token comment" spellcheck="true">// 如果在命令行中提供了{@link #PROC_START_SEQ_IDENT}，请查找它的值。</span>        <span class="token comment" spellcheck="true">// 格式为“seq=114”</span>        <span class="token keyword">long</span> startSeq <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>PROC_START_SEQ_IDENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    startSeq <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>                            args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>PROC_START_SEQ_IDENT<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        ActivityThread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        thread<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> startSeq<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sMainThreadHandler <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sMainThreadHandler <span class="token operator">=</span> thread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageLogging</span><span class="token punctuation">(</span><span class="token keyword">new</span>                    <span class="token class-name">LogPrinter</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span> <span class="token string">"ActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// End of event ActivityThreadMain.</span>        <span class="token comment" spellcheck="true">// 事件ActivityThreadMain的结束。</span>        Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>        Looper<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Main thread loop unexpectedly exited"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ------------------ Regular JNI ------------------------</span></code></pre><p>这里最主要的是<code>ActivityThread thread = new ActivityThread()</code>，这里的意思就是我们每点一个图标他就会开启一个进程(APP)，我们可以看一下<code>thread.attach(false, startSeq)</code>，这个方法中做了什么。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> system<span class="token punctuation">,</span> <span class="token keyword">long</span> startSeq<span class="token punctuation">)</span> <span class="token punctuation">{</span>        sCurrentActivityThread <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        mSystemThread <span class="token operator">=</span> system<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>system<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ViewRootImpl<span class="token punctuation">.</span><span class="token function">addFirstDrawHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">ensureJitEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            android<span class="token punctuation">.</span>ddm<span class="token punctuation">.</span>DdmHandleAppName<span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">"&lt;pre-initialized>"</span><span class="token punctuation">,</span>                                                    UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            RuntimeInit<span class="token punctuation">.</span><span class="token function">setApplicationObject</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">.</span><span class="token function">asBinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">final</span> IActivityManager mgr <span class="token operator">=</span> ActivityManager<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                mgr<span class="token punctuation">.</span><span class="token function">attachApplication</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">,</span> startSeq<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> ex<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// Watch for getting close to heap limit.</span>            <span class="token comment" spellcheck="true">// 注意是否接近堆限制。</span>            BinderInternal<span class="token punctuation">.</span><span class="token function">addGcWatcher</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mSomeActivitiesChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Runtime runtime <span class="token operator">=</span> Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">long</span> dalvikMax <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">maxMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">long</span> dalvikUsed <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">totalMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> runtime<span class="token punctuation">.</span><span class="token function">freeMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>dalvikUsed <span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>dalvikMax<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_MEMORY_TRIM<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">d</span>                        <span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Dalvik max="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dalvikMax<span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span>                                <span class="token operator">+</span> <span class="token string">" total="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">totalMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span>                                <span class="token operator">+</span> <span class="token string">" used="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dalvikUsed<span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        mSomeActivitiesChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token keyword">try</span> <span class="token punctuation">{</span>                            mgr<span class="token punctuation">.</span><span class="token function">releaseSomeActivities</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// Don't set application object here -- if the system crashes,</span>            <span class="token comment" spellcheck="true">// we can't display an alert, we just want to die die die.</span>            <span class="token comment" spellcheck="true">// 不要在这里设置应用程序对象——如果系统崩溃，</span>            <span class="token comment" spellcheck="true">// 我们不能显示警报，我们只想死，死，死。</span>            android<span class="token punctuation">.</span>ddm<span class="token punctuation">.</span>DdmHandleAppName<span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">"system_process"</span><span class="token punctuation">,</span>                    UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                mInstrumentation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Instrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mInstrumentation<span class="token punctuation">.</span><span class="token function">basicInit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ContextImpl context <span class="token operator">=</span> ContextImpl<span class="token punctuation">.</span><span class="token function">createAppContext</span><span class="token punctuation">(</span>                        <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getSystemContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mPackageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>                mInitialApplication <span class="token operator">=</span> context<span class="token punctuation">.</span>mPackageInfo<span class="token punctuation">.</span><span class="token function">makeApplication</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                mInitialApplication<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>                        <span class="token string">"Unable to instantiate Application():"</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// add dropbox logging to libcore</span>        <span class="token comment" spellcheck="true">// 将dropbox日志添加到libcore</span>        DropBox<span class="token punctuation">.</span><span class="token function">setReporter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DropBoxReporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ViewRootImpl<span class="token punctuation">.</span>ConfigChangedCallback configChangedCallback                <span class="token operator">=</span> <span class="token punctuation">(</span>Configuration globalConfig<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mResourcesManager<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// We need to apply this change to the resources immediately, </span>                <span class="token comment" spellcheck="true">// because upon returning the view hierarchy will be </span>                <span class="token comment" spellcheck="true">// informed about it.</span>                <span class="token comment" spellcheck="true">// 我们需要立即将此更改并应用于资源，在返回视图层次结构时，将通知它。</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mResourcesManager<span class="token punctuation">.</span><span class="token function">applyConfigurationToResourcesLocked</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">,</span>                        null <span class="token comment" spellcheck="true">/* compat */</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">updateLocaleListFromAppContext</span><span class="token punctuation">(</span>mInitialApplication<span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            mResourcesManager<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocales</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// This actually changed the resources! Tell everyone about it.</span>                     <span class="token comment" spellcheck="true">// 这实际上改变了资源!把这件事告诉大家。</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mPendingConfiguration <span class="token operator">==</span> null                            <span class="token operator">||</span> mPendingConfiguration<span class="token punctuation">.</span><span class="token function">isOtherSeqNewer</span><span class="token punctuation">(</span>globalConfig<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        mPendingConfiguration <span class="token operator">=</span> globalConfig<span class="token punctuation">;</span>                        <span class="token function">sendMessage</span><span class="token punctuation">(</span>H<span class="token punctuation">.</span>CONFIGURATION_CHANGED<span class="token punctuation">,</span> globalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        ViewRootImpl<span class="token punctuation">.</span><span class="token function">addConfigCallback</span><span class="token punctuation">(</span>configChangedCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>这个方法主要是用于绑定Application，其中有一个<code>mgr.attachApplication(mAppThread, startSeq)</code>，就是这个方法用于绑定Application。<code>context.mPackageInfo.makeApplication(true, null)</code>这里我们可以看到开始使用Application，它会把包信息一点一点传入。当我们点击前面的变量时，<code>Application mInitialApplication</code>会跳转到这里，大家看到这里应该也就明白了，这就是我们经常继承的Application。<br>所以说，我们优化的过程就是从<code>Application</code>的<code>onCreate()</code>方法到<code>Activity</code>的<code>onCreate</code>方法。下图则是表示当系统的事情完成之后，我们优化的地方。如果说大家想从系统层就开始优化，将来有时间我们可以 共同学习一下这一块。<br><img src="https://i.loli.net/2019/07/18/5d30813a055e185135.png" alt="优化位置.png"></p><h2 id="三、黑白屏"><a href="#三、黑白屏" class="headerlink" title="三、黑白屏"></a>三、黑白屏</h2><h3 id="1-问题根源"><a href="#1-问题根源" class="headerlink" title="1.问题根源"></a>1.问题根源</h3><p>   在我们新建项目的时候，都会有这么一个问题。就是在values-&gt;styles.xml这个文件。APP默认的这个主题。如果我们不加以设修改，就会出现黑白屏。</p><pre class=" language-css"><code class="language-css">&lt;resources>    &lt;!-- Base application theme<span class="token number">.</span> -->    &lt;style name=<span class="token string">"AppTheme"</span> parent=<span class="token string">"Theme.AppCompat.Light.DarkActionBar"</span>>        &lt;!-- Customize your theme here<span class="token number">.</span> -->        &lt;item name=<span class="token string">"colorPrimary"</span>>@color/colorPrimary&lt;/item>        &lt;item name=<span class="token string">"colorPrimaryDark"</span>>@color/colorPrimaryDark&lt;/item>        &lt;item name=<span class="token string">"colorAccent"</span>>@color/colorAccent&lt;/item>    &lt;/style>&lt;/resources></code></pre><p>  就下来我们从两个方面来说优化的这个事情。</p><h3 id="2-如何优化"><a href="#2-如何优化" class="headerlink" title="2.如何优化"></a>2.如何优化</h3><h4 id="1-伪优化"><a href="#1-伪优化" class="headerlink" title="1.伪优化"></a>1.伪优化</h4><p>  　　在用户的行为上做优化，实际上，这就是一种假的优化。通过各种方式，让用户结束。<br>  　　如果我们去除<code>parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;</code>这一块代码的话，这里就会出现启动后黑屏，如果写了则是白屏。如果手机性能特别好的话，可能看不出来。可以在<code>Application-&gt;onCreate()</code>到<code>Activity-&gt;onCreate()</code>之间加一个耗时操作。就可以看到。</p><h4 id="处理方案（1）"><a href="#处理方案（1）" class="headerlink" title="处理方案（1）"></a>处理方案（1）</h4><p>　　我们可以给它添加一张背景图，点击<code>parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;</code>进入系统定义的<code>valuse.xml</code>，找到一个父类<code>name=&quot;Platform.AppCompat.Light&quot;</code>中定义了<code>&lt;item name=&quot;android:windowBackground&quot;&gt;@drawable/xx&lt;/item&gt;</code>用来控制黑白屏。有些小伙伴可能通过<code>&lt;item name=&quot;android:windowIsTranslucent&quot;&gt;true&lt;/item&gt;</code>把他设置为true，来修改这块。如果我们这么写的话，则会出现点击以后，会停留一段时间，然后再开启应用。这么写的话，还会占用内存。大家细心的话，也会发现QQ中也是这么写的，但是它的优化当然是更高级的咯。它是通过<code>&lt;item name=&quot;android:windowBackground&quot;&gt;@null&lt;/item&gt;</code><br>    <code>&lt;item name=&quot;android:windowDisablePreview&quot;&gt;true&lt;/item&gt;</code>来修改的。具体的意思就是去掉背景，然后去处预览功能。因为这类在加载的时候需要加载很多的信息，所以它就会通过这种方式来给自己的APP提供加载时间。如果，它检测到用户这里是有缓存的话，它就会直接拿缓存中的数据。反之，则会有启动页。</p><h4 id="处理方案（2）"><a href="#处理方案（2）" class="headerlink" title="处理方案（2）"></a>处理方案（2）</h4><p>　　我们直接这么写的话，肯定是不行的。为什么呢？因为所有的<code>Activity</code>都是用这个主题了，继而都会出现启动页面的情况，所以，我们需要单独给它写一个主题，然后在<code>AndroidManifest.xml</code>中配置。只需要找到使用<code>LAUNCHER</code>的这个<code>Activity</code>，然后给它添加主题就可以了。</p><h4 id="处理方案（3）"><a href="#处理方案（3）" class="headerlink" title="处理方案（3）"></a>处理方案（3）</h4><p>　　我们还可以通过做一些启动动画，或者说像<code>好好学习</code>这类APP的处理方式，就是在启动APP进入主页后，弹出一个<code>PopWindow</code>/<code>Dialog</code>，让用户同意<code>用户隐私政策概要</code>/<code>其他的一些东西，根据业务需求而定</code>。因为用户很少能做出反应，说弹出这个UI后，直接点击。这时，我们就可以在弹出这个页面后，加载主页面的UI。    　　　　</p><h4 id="2-非伪优化"><a href="#2-非伪优化" class="headerlink" title="2.非伪优化"></a>2.非伪优化</h4><p>  直接优化执行程序的性能。</p><ol><li>如何查看从<code>Application-&gt;onCreate()</code>到<code>Activity-&gt;onCreate()</code>之间的优化？    <pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"app1.trace"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> LogUtils<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//把分析结果存放在路径</span> Debug<span class="token punctuation">.</span><span class="token function">startMethodTracing</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//其他的一些初始化的东西    </span> xxx<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> xx<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> xxxx<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//结束的位置 停止</span> Debug<span class="token punctuation">.</span><span class="token function">stopMethodTracing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>　　我们添加完成后，就可以把<code>app1.trace</code>这个文件直接拖入到AS中，显示效果就是下图：<br><img src="https://i.bmp.ovh/imgs/2019/07/3785efb2cf95b49d.png" alt><br><img src="https://i.bmp.ovh/imgs/2019/07/91f76ffe8c174388.png" alt><br><img src="https://i.bmp.ovh/imgs/2019/07/d8a86b021194228e.png" alt><br>　　我们从这里边可以看到很多信息，比如初始化了哪些控件，初始化时间，每个初始化所占用时间的比例等等。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、App启动分类&quot;&gt;&lt;a href=&quot;#一、App启动分类&quot; class=&quot;headerlink&quot; title=&quot;一、App启动分类&quot;&gt;&lt;/a&gt;一、App启动分类&lt;/h2&gt;&lt;h3 id=&quot;1-冷启动-COLD-START&quot;&gt;&lt;a href=&quot;#1-冷启动-COL
      
    
    </summary>
    
      <category term="Android" scheme="https://lizhi0817.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://lizhi0817.github.io/tags/Android/"/>
    
      <category term="性能优化" scheme="https://lizhi0817.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lizhi0817.github.io/2019/07/17/hello-world/"/>
    <id>https://lizhi0817.github.io/2019/07/17/hello-world/</id>
    <published>2019-07-17T12:18:36.671Z</published>
    <updated>2019-07-18T07:40:23.211Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
